Magick2CPC
==========

An image converter for CPC using ImageMagick.

- What is Magick2CPC?
- Current features and usages
- Limitations and issues
- Licensing
- Installation of Magick2CPC
- TODO

What is Magick2CPC?
------------------

Magick2CPC is an image converter that produice source code to CPC and other target.
Unlike other tool, it tend to be integrating as a part of a toolchain like in Makefile.

Magick2CPC :

- is scriptable
- is easy hackable
- is portable 
- is opensource and developer welcome ( git, wiki and bugtracker @ github ) 
- uses the powerful MagickWand to have many image processing features

Current features:
----------------

* z88dk sprite :

Magick2cpc can produice source code for putsprite().
http://www.z88dk.org/wiki/doku.php?id=library:sprites:monosprites
if --boolean option is used, it add a visualisation of the image as a comment.

* cpcrslib sprite :
http://code.google.com/p/cpcrslib/
if --boolean option is used, it produices non masked sprite.

* CPC assembly raster

Limitations and issues:
----------------------

This concerns current situation,  therefore do not understand those as
immutable issues!

- tested only on Linux (other OS support is planned)
- you should provide ready to transform image.

Licensing:
---------

Magick2CPC is licensed under the GPLv3. A copy of this license is provided
with Magick2CPC archive.

Installation of Magick2CPC:
----------------------

A configure  script is provided. If  you get some trouble  with it you
will be able to recreate it while running autogen.sh script.

Run: 
	 ./configure

Note that having libmagickwand-dev installed is MANDATORY.

Then run:

	 make && make install

A more detailed documentation about installation is provided in Magick2CPC
archive  in INSTALL  document. If  you want  to change  de  prefix for
instance.

TODO :
----

* Use ImageMagick "Custom Image Coders", see :
- http://www.imagemagick.org/script/architecture.php
- http://trac.imagemagick.org/browser/ImageMagick/trunk/coders/
- http://www.sportmarketing-tbb.de/doc/libmagick4-dev/blob.html

* Work with multiple image wand, see :
- MagickHasPreviousImage() returns MagickTrue if the wand has more images when traversing the list in the reverse direction
- MagickDeconstructImages() compares each image with the next in a sequence and returns the maximum bounding region of any pixel differences it discovers.

